stages:
  - build
  - deploy

.build:
  stage: build
  image: docker:stable
  services:
    - docker:stable-dind
  variables:
    DOCKER_HOST: docker:2375
  script:
    - echo "$DOCKER_REGISTRY_PASS" | docker login --username $DOCKER_REGISTRY_USER --password-stdin $DOCKER_REGISTRY
    - export TAG=$( if [[ ! -z "$DOCKER_REGISTRY" ]]; then echo "$DOCKER_REGISTRY/"; fi )mvochoa/blog:$CI_COMMIT_TAG
    - docker build -t $TAG .
    - docker push $TAG

build::image:
  extends: .build
  before_script:
    - export CI_COMMIT_TAG=latest
  only:
    - main

build::image::tag:
  extends: .build
  before_script:
    - echo "Ok"
  only:
    - tags

deploy::latest:
  stage: deploy
  image: mvochoa/docker-compose:1.27.4-alpine
  variables:
    DOCKER_HOST: ssh://docker@mvochoa.com
  before_script:
    - export CI_COMMIT_TAG=latest
    - export TAG=$( if [[ ! -z "$DOCKER_REGISTRY" ]]; then echo "$DOCKER_REGISTRY/"; fi )mvochoa/blog:$CI_COMMIT_TAG
    - apk add --update openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | base64 -d | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" >> ~/.ssh/config
    - chmod 644 ~/.ssh/config
    - echo "$DOCKER_REGISTRY_PASS" | docker login --username $DOCKER_REGISTRY_USER --password-stdin $DOCKER_REGISTRY
  script:
    - docker pull $TAG
    - docker-compose -f docker-compose.stack.yml up -d
  only:
    - main